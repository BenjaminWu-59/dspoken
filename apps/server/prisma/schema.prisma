// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  name   String? @unique
  phone  String?
  gender String? // male; female
  age    Int?
  avatar String?

  MemberVip MemberVip[]
  Library   Library[]
  Classes   Classes[]

  @@map("users")
}

model MemberVip {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  level    Int
  timeLeft DateTime?

  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@map("membervip")
}

// ---------- Library 相关 -----------
model Library {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  number    Int
  hint      String
  sentence  String
  audioUrl  String?
  review    String? 
  status    String?  
  classId   String?
  class     Classes?  @relation(fields: [classId], references: [id]) 

  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("library")
}

model Classes {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String
  note      String?

  userId    String
  user      User     @relation(fields: [userId], references: [id])
  libraries Library[]

  @@map("classes")
}
